name: Common Builder

on:
    workflow_call:
        inputs:
            json-file-path:
                required: true
                type: string
            path-to-example-app:
                required: true
                type: string
            example-app:
                required: true
                type: string
            build-type:
                required: true
                type: string
            platform:
                required: true
                type: string
env:
  CONAN_HOME: ~/.silabs/slt/installs/conan

jobs:
    build:
        name: ${{ inputs.platform }}-build-job
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                submodules: 'true'
            
            - name: Setup SLT
              id: setup-action
              uses: SiliconLabsSoftware/matter_build_action/action-setup-slt@action/setup-slt

            - name: Check SLT version
              run: |
                echo "SLT version installed: ${{ steps.setup-action.outputs.slt-version }}"
                echo "SLT executable path : ${{ steps.setup-action.outputs.slt-path }}"
                echo "conan_engine version installed: ${{ steps.setup-action.outputs.conan-engine-version }}"
                echo "conan_engine executable path: ${{ steps.setup-action.outputs.conan-engine-path }}"
                echo "conan version installed: ${{ steps.setup-action.outputs.conan-version }}"
                echo "conan executable path: ${{ steps.setup-action.outputs.conan-path }}"
            
            - name: Setup Conan remotes
              id: add-conan-remotes
              run: |
                make install_remotes
                conan remote list
            
            - name: Update SLT
              run: slt update --self

            - name: Mark repository as safe for Git
              shell: bash
              run: |
                git config --global --add safe.directory $(pwd)

            - name: define concurrent threads for conan download and upload
              id: check-conan
              run: |
                  conan --version
                  conan config home
                  mkdir -p conan-settings
                  cat > conan-settings/global.conf << EOF
                  core.download:parallel=6
                  core.upload:parallel=4
                  EOF
                  conan config install ./conan-settings --type dir
                  conan config show "*"
                  rm -rf conan-settings
            
            - name: Install libgl1 for commander
              run: |
                sudo apt-get update
                sudo apt-get install -y libgl1 libglib2.0-0

            - name: Install GCC, CMAKE, commander
              id: setup-conan
              run: |
                conan config show "*"
                slt install commander
                slt install gcc-arm-none-eabi --engine conan
                slt install cmake --engine conan 
            
            - name: Create Matter app package
              run: make create_app_package
            
            - name: Create Matter Stack package
              run: make create_stack_package

            - name: Build ${{ inputs.example-app }}
              uses: SiliconLabsSoftware/matter_build_action@3fa7357e526337fb8f370a20158b8857aeb708ab
              with:
                json-file-path: ${{ inputs.json-file-path }}
                path-to-example-app: ${{ inputs.path-to-example-app }}
                example-app: ${{ inputs.example-app }}
                build-script: "python3 slc/build.py --ci --verbose"
                output-directory: " "
                build-type: ${{ inputs.build-type }}

#            - name: Upload artifacts
#              uses: actions/upload-artifact@v4
#              with:
#                  name: ${{ inputs.example-app }}-${{inputs.platform}}-${{ inputs.build-type }}
#                  path: ${{ env.SAMPLE_APP_PATH }}/out/*/*/artifact
#                  if-no-files-found: error
#                  overwrite: true
