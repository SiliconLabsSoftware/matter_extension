name: Validate Metadata

on:
  push:
      branches:
          - main
          - "release_*"
  pull_request:
        branches:
          - main
          - "release_*"

concurrency: 
    group: validate-metadata-${{ github.ref }}
    cancel-in-progress: true

jobs:
  package-field:
    name: Validate Matter Extension Package Field
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          submodules: false 

      - name: Validate Matter Extension Package Field
        shell: bash
        run: |
          set -e 
          output=$(python3 -u './slc/script/verify_package_matter.py' --directory . --verbose 2>&1) 
          echo "$output"
          no_warning="INFO - All .slcc, .slcp, and .slce files contain the required strings."
          if [[ "$output" != *"$no_warning"* ]]; then
            if [[ -f "missing_package_matter.txt" ]]; then
              echo "Packages without 'package: matter' detected"
              cat missing_package_matter.txt
            else 
              echo "Error: 'missing_package_matter.txt' does not exist, but it was expected."
              exit 1
            fi
          fi

  file-path-lengths:
    name: Validate Matter Extension File Path Lengths
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v5
      with:
        submodules: false 

    - name: Initialize required submodules
      shell: bash
      run: |
        git submodule update --init \
          third_party/aws_ota_sdk \
          third_party/matter_sdk \
          third_party/matter_support \
          third_party/mbedtls \
          third_party/mqtt \
          third_party/nlassert \
          third_party/nlio \
          third_party/QR-Code-generator \
          third_party/wiseconnect-wifi-bt-sdk
      
    - name: Stage Extension
      run: python3 slc/stage_extension.py ../staged

    - name: Validate Matter Extension File Path Lengths 
      shell: bash
      working-directory: ${{ github.workspace }}/../staged/matter_extension
      run: |
        set -e 
        output=$(python3 -u './slc/script/file_path_length_analyzer.py' --directory . --verbose 2>&1) 
        echo "$output"
        no_warning="INFO:__main__:No file paths exceeding 240 characters were detected. Nothing will be written to the file."
        if [[ "$output" != *"$no_warning"* ]]; then
          if [[ -f "long_file_paths.txt" ]]; then
            echo "File paths exceeding 240 characters detected!"
            cat long_file_paths.txt
          else
            echo "Error: 'long_file_paths.txt' does not exist, but it was expected."
            exit 1
          fi  
        fi
        
  matter-templates:
    name: Validate Matter Templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          submodules: false 

      - name: Validate Matter Templates 
        shell: bash
        run: | 
          set -e
          python3 -u './slc/script/validate_matter_templates.py'
   
  components:
    name: Validate Components
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/siliconlabssoftware/matter_extension_dependencies:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          submodules: false 

      - name: Mark Repository as Safe for Git
        shell: bash
        run: |
          git config --global --add safe.directory /__w/matter_extension/matter_extension
      - name: Initialize required submodules
        shell: bash
        run: |
          git submodule update --init \
            third_party/aws_ota_sdk \
            third_party/matter_sdk \
            third_party/matter_support \
            third_party/mbedtls \
            third_party/mqtt \
            third_party/nlassert \
            third_party/nlio \
            third_party/QR-Code-generator \
            third_party/wiseconnect-wifi-bt-sdk
      
      - name: Trust SDK 
        shell: bash
        run: |
          set -e 
          echo "Trusting SDK at ${SISDK_ROOT}"
          slc configuration --sdk ${SISDK_ROOT} -data ${SISDK_ROOT}/out/dmp_uc.data
          slc signature trust --sdk ${SISDK_ROOT}
          
      - name: Validate Components
        shell: bash
        continue-on-error: true
        run: |
          set -e
          python3 -u './slc/script/validate_components.py' slc/component slc
