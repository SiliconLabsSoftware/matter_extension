name: Build Dev apps

on:
    schedule:
        - cron: '0 22 * * *' # 6 pm EST daily
    pull_request:
        branches:
            - main
            - "release_*"

    workflow_dispatch:
        inputs:
            build-type:
                description: "The build type to use"
                required: true
                type: choice
                options:
                    - standard
                    - full

concurrency:
    group: dev-build-examples-${{ github.ref }}
    cancel-in-progress: true

jobs:

    set-build-type:
        runs-on: ubuntu-latest
        outputs:
            build-type: ${{ steps.set-build-type.outputs.build-type }}
        steps:
            - name: Set build-type based on event
              id: set-build-type
              run: |
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                      echo "build-type=${{ github.event.inputs.build-type }}" >> $GITHUB_OUTPUT
                  elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
                      echo "build-type=standard" >> $GITHUB_OUTPUT
                  elif [[ "${{ github.event_name }}" == "push" ]]; then
                      if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == refs/heads/release_* ]]; then
                          echo "build-type=full" >> $GITHUB_OUTPUT
                      else
                          echo "build-type=standard" >> $GITHUB_OUTPUT
                      fi
                  fi

    build-lighting-app:
        name: Build Lighting App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "lighting-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}

    build-air-quality-sensor-app:
        name: Build Air Quality Sensor App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "air-quality-sensor-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}

    build-light-switch-app:
        name: Build Light Switch App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "light-switch-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
    build-lock-app:
        name: Build Lock App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "lock-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
            ncp-917-support: true
            ncp-wf200-support: true

    build-thermostat-app:
        name: Build Thermostat App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "thermostat"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
            ncp-917-support: true
            ncp-wf200-support: true

    build-window-app:
        name: Build Window App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "window-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
            ncp-917-support: true

    build-fan-control-app:
        name: Build Fan Control App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "fan-control-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
            thread-support: false

    build-closure-app:
        name: Build Closure App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "closure-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}

    build-multi-sensor-app:
        name: Build Multi Sensor App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "multi-sensor-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}

    build-onoff-plug-app:
        name: Build OnOff Plug App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "onoff-plug-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}

    build-refrigerator-app:
        name: Build Refrigerator App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "refrigerator-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
    
    build-performance-test-app:
        name: Build Performance Test App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "performance-test-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
            wifi-soc-support: false

    build-zigbee-matter-light-app:
        name: Build Zigbee Matter Light App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "zigbee-matter-light"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
            thread-keyword: ""
            mg24-internal-support: false
            mgm24-support: false
            mgm24-internal-support: false
            wifi-soc-support: false

    build-platform-app:
        name: Build Platform App
        needs: set-build-type
        uses: ./.github/workflows/platform-builder.yaml
        with:
            example-app: "platform-app"
            build-type: ${{ needs.set-build-type.outputs.build-type }}
            wifi-soc-support: false

    build-sqa-tools:
        name: Build SQA Tools
        needs: set-build-type
        uses: ./.github/workflows/sqa-tools-builder.yaml
        with:
            build-type: ${{ needs.set-build-type.outputs.build-type }}

    merge-apps:
        name: Merge App Artifacts
        runs-on: ubuntu-latest
        needs:
            - set-build-type
            - build-sqa-tools
            - build-lighting-app
            - build-air-quality-sensor-app
            - build-light-switch-app
            - build-lock-app
            - build-thermostat-app
            - build-window-app
            - build-fan-control-app
            - build-multi-sensor-app
            - build-onoff-plug-app
            - build-refrigerator-app
            - build-performance-test-app
            - build-platform-app
            - build-zigbee-matter-light-app
            - build-closure-app
        if: success()        
        outputs:
            build-type: ${{ steps.propagate-build-type.outputs.build-type }}
        steps:
            - id: propagate-build-type
              run: echo "build-type=${{ needs.set-build-type.outputs.build-type }}" >> $GITHUB_OUTPUT
            - name: Aggregation complete
              run: echo "All app build jobs completed."
    
    upload-packages:
        needs: merge-apps
        uses: ./.github/workflows/upload-packages.yaml
        secrets: inherit
        with:
            upload_packages: true
            
    notify:  
        needs: upload-packages
        runs-on: silabs-internal
        if: always() && needs.upload-packages.result != 'skipped'  # ensures this runs regardless of previous job success/failure but not if skipped
        steps:
            - name: Determine status color and emoji
              id: status_info
              run: |
                if [[ "${{ needs.upload-packages.result }}" == "success" ]]; then
                  echo "color=good" >> $GITHUB_OUTPUT
                  echo "emoji=✅" >> $GITHUB_OUTPUT
                elif [[ "${{ needs.upload-packages.result }}" == "failure" ]]; then
                  echo "color=danger" >> $GITHUB_OUTPUT
                  echo "emoji=❌" >> $GITHUB_OUTPUT
                else
                  echo "color=warning" >> $GITHUB_OUTPUT
                  echo "emoji=⚠️" >> $GITHUB_OUTPUT
                fi
            
            - name: Send message to Slack
              uses: slackapi/slack-github-action@v2.1.1
              with:
                webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
                webhook-type: incoming-webhook
                payload: |
                  {
                    "attachments": [
                      {
                        "color": "${{ steps.status_info.outputs.color }}",
                        "blocks": [
                          {
                            "type": "section",
                            "text": {
                              "type": "mrkdwn",
                              "text": "${{ steps.status_info.outputs.emoji }} *Dev Apps Build & Publish*\n\n*Branch:* ${{ github.ref_name }}\n*Workflow:* ${{ github.workflow }}\n*Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>\n*Status:* ${{ needs.upload-packages.result }}\n*Triggered by:* ${{ github.actor }}\n\n*Stack Package*\nRef: ${{ needs.upload-packages.outputs.stack-package-ref }}\nFull Ref: ${{ needs.upload-packages.outputs.stack-full-package-ref }}\nName: ${{ needs.upload-packages.outputs.stack-package-name }}\nVersion: ${{ needs.upload-packages.outputs.stack-package-version }}\nChannel: ${{ needs.upload-packages.outputs.stack-package-channel }}\nUser: ${{ needs.upload-packages.outputs.stack-package-user }}\nID: ${{ needs.upload-packages.outputs.stack-package-id }}\nRecipe Rev: ${{ needs.upload-packages.outputs.stack-recipe-revision }}\nPkg Rev: ${{ needs.upload-packages.outputs.stack-package-revision }}\nPrerelease: ${{ needs.upload-packages.outputs.stack-prerelease-qualifier }}${{ needs.upload-packages.outputs.stack-prerelease-qualifier && '.' || '' }}${{ needs.upload-packages.outputs.stack-prerelease-number }}\n\n*App Package*\nRef: ${{ needs.upload-packages.outputs.app-package-ref }}\nFull Ref: ${{ needs.upload-packages.outputs.app-full-package-ref }}\nName: ${{ needs.upload-packages.outputs.app-package-name }}\nVersion: ${{ needs.upload-packages.outputs.app-package-version }}\nChannel: ${{ needs.upload-packages.outputs.app-package-channel }}\nUser: ${{ needs.upload-packages.outputs.app-package-user }}\nID: ${{ needs.upload-packages.outputs.app-package-id }}\nRecipe Rev: ${{ needs.upload-packages.outputs.app-recipe-revision }}\nPkg Rev: ${{ needs.upload-packages.outputs.app-package-revision }}\nPrerelease: ${{ needs.upload-packages.outputs.app-prerelease-qualifier }}${{ needs.upload-packages.outputs.app-prerelease-qualifier && '.' || '' }}${{ needs.upload-packages.outputs.app-prerelease-number }}"
                            }
                          }
                        ]
                      }
                    ]
                  }